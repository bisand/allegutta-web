generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model ath_history {
  id          String     @id
  portfolioId String
  athValue    Float
  athDate     DateTime
  surpassedAt DateTime   @default(now())
  newAthValue Float
  createdAt   DateTime   @default(now())
  portfolios  portfolios @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
}

model holdings {
  id          String     @id
  portfolioId String
  symbol      String
  isin        String?
  quantity    Float
  avgPrice    Float
  currency    String     @default("NOK")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  portfolios  portfolios @relation(fields: [portfolioId], references: [id], onDelete: Cascade)

  @@unique([portfolioId, symbol])
}

model market_data {
  isin                          String    @id
  symbol                        String
  symbolYahoo                   String?
  longName                      String?
  shortName                     String?
  currency                      String?
  currentPrice                  Float?
  regularMarketChange           Float?
  regularMarketChangePercent    Float?
  regularMarketPreviousClose    Float?
  regularMarketDayHigh          Float?
  regularMarketDayLow           Float?
  regularMarketDayRange         String?
  regularMarketVolume           Float?
  regularMarketTime             DateTime?
  fiftyTwoWeekLow               Float?
  fiftyTwoWeekHigh              Float?
  fiftyTwoWeekLowChange         Float?
  fiftyTwoWeekHighChange        Float?
  fiftyTwoWeekLowChangePercent  Float?
  fiftyTwoWeekHighChangePercent Float?
  fiftyTwoWeekRange             String?
  exchange                      String?
  exchangeTimezoneName          String?
  exchangeTimezoneShortName     String?
  fullExchangeName              String?
  marketState                   String?
  quoteType                     String?
  typeDisp                      String?
  firstTradeDateMilliseconds    Float?
  lastUpdated                   DateTime  @default(now())
  createdAt                     DateTime  @default(now())
  updatedAt                     DateTime
}

model portfolios {
  id           String         @id
  name         String
  description  String?
  userId       String
  isDefault    Boolean        @default(false)
  currency     String         @default("NOK")
  cashBalance  Float          @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  athDate      DateTime?
  athValue     Float?
  ath_history  ath_history[]
  holdings     holdings[]
  users        users          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions transactions[]
}

model transactions {
  id          String     @id
  portfolioId String
  symbol      String
  isin        String?
  type        String
  quantity    Float
  price       Float
  fees        Float      @default(0)
  amount      Float?
  currency    String     @default("NOK")
  date        DateTime
  saldo       Float?
  notes       String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  portfolios  portfolios @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
}

model users {
  id          String       @id
  kindeId     String       @unique
  email       String       @unique
  firstName   String?
  lastName    String?
  picture     String?
  roles       String       @default("[]")
  permissions String       @default("[]")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  portfolios  portfolios[]
}
