// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  kindeId     String   @unique
  email       String   @unique
  firstName   String?
  lastName    String?
  picture     String?
  roles       String   @default("[]") // JSON array of roles from Kinde
  permissions String   @default("[]") // JSON array of permissions from Kinde
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  portfolios  Portfolio[]
  
  @@map("users")
}

model Portfolio {
  id          String   @id @default(cuid())
  name        String
  description String?
  userId      String
  isDefault   Boolean  @default(false)
  currency    String   @default("NOK") // Default currency for the portfolio
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  holdings    Holding[]
  
  @@map("portfolios")
}

model Transaction {
  id          String      @id @default(cuid())
  portfolioId String
  symbol      String
  isin        String?     // International Securities Identification Number
  type        TransactionType
  quantity    Float
  price       Float
  fees        Float       @default(0)
  currency    String      @default("NOK") // Currency for this transaction
  date        DateTime
  saldo       Float?      // Broker's authoritative cash balance after this transaction
  notes       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  
  @@map("transactions")
}

model Holding {
  id          String   @id @default(cuid())
  portfolioId String
  symbol      String
  isin        String?  // International Securities Identification Number
  quantity    Float
  avgPrice    Float
  currentPrice Float?
  currency    String   @default("NOK") // Currency for this holding
  lastUpdated DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  
  @@unique([portfolioId, symbol])
  @@map("holdings")
}

enum TransactionType {
  BUY
  SELL
  DIVIDEND
  SPLIT
  MERGER
  DEPOSIT
  WITHDRAWAL
  REFUND
  LIQUIDATION
  REDEMPTION
  EXCHANGE_IN
  EXCHANGE_OUT
  SPIN_OFF_IN
  DECIMAL_LIQUIDATION
  DECIMAL_WITHDRAWAL
  RIGHTS_ALLOCATION
  TRANSFER_IN
  DIVIDEND_REINVEST
  INTEREST_CHARGE
  RIGHTS_ISSUE
  SALDO_ADJUSTMENT
}
