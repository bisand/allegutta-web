// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  kindeId     String   @unique
  email       String   @unique
  given_name  String?
  family_name String?
  picture     String?
  portfolios  Portfolio[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("users")
}

model Portfolio {
  id           String        @id @default(cuid())
  userId       String
  name         String
  description  String?
  currency     String        @default("NOK") // Base currency for this portfolio
  cash         Float         @default(0) // Current cash balance (in portfolio currency)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  holdings     Holding[]

  @@unique([userId, name])
  @@map("portfolios")
}

model Transaction {
  id          String      @id @default(cuid())
  portfolioId String
  symbol      String
  isin        String?     // International Securities Identification Number
  type        TransactionType
  quantity    Float
  price       Float
  fees        Float       @default(0)
  amount      Float?      // Original beløp amount from CSV for accurate calculations
  currency    String      @default("NOK") // Currency for this transaction
  date        DateTime
  saldo       Float?      // Broker's authoritative cash balance after this transaction
  notes       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  
  @@map("transactions")
}

model Holding {
  id          String    @id @default(cuid())
  portfolioId String
  symbol      String
  isin        String?   // International Securities Identification Number
  quantity    Float
  averagePrice Float
  currency    String    @default("NOK") // Currency for this holding
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  
  @@unique([portfolioId, symbol])
  @@map("holdings")
}

model MarketData {
  isin          String   @id     // International Securities Identification Number (primary key)
  yahooSymbol   String?          // Yahoo Finance symbol for this ISIN
  companyName   String?
  sector        String?
  country       String?
  exchange      String?
  currency      String?
  marketCap     Float?
  peRatio       Float?
  dividendYield Float?
  beta          Float?
  eps           Float?
  bookValue     Float?
  fiftyTwoWeekHigh Float?
  fiftyTwoWeekLow  Float?
  currentPrice  Float?
  previousClose Float?
  dayChange     Float?
  dayChangePercent Float?
  lastUpdated   DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("market_data")
}

enum TransactionType {
  BUY
  SELL
  DIVIDEND
  DEPOSIT
  WITHDRAWAL
  TRANSFER_IN
  TRANSFER_OUT
  FEE
  INTEREST
  TAX
  STOCK_SPLIT
  MERGER
  RIGHTS_ISSUE
  BONUS_ISSUE
  DELISTING
  OTHER
}risma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  kindeId     String   @unique
  email       String   @unique
  firstName   String?
  lastName    String?
  picture     String?
  roles       String   @default("[]") // JSON array of roles from Kinde
  permissions String   @default("[]") // JSON array of permissions from Kinde
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  portfolios  Portfolio[]
  
  @@map("users")
}

model Portfolio {
  id          String   @id @default(cuid())
  name        String
  description String?
  userId      String
  isDefault   Boolean  @default(false)
  currency    String   @default("NOK") // Default currency for the portfolio
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  holdings    Holding[]
  
  @@map("portfolios")
}

model Transaction {
  id          String      @id @default(cuid())
  portfolioId String
  symbol      String
  isin        String?     // International Securities Identification Number
  type        TransactionType
  quantity    Float
  price       Float
  fees        Float       @default(0)
  amount      Float?      // Original beløp amount from CSV for accurate calculations
  currency    String      @default("NOK") // Currency for this transaction
  date        DateTime
  saldo       Float?      // Broker's authoritative cash balance after this transaction
  notes       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  
  @@map("transactions")
}

model MarketData {
  isin        String   @id // ISIN as primary key
  symbol      String   // Original symbol (e.g., NHY)
  symbolYahoo String?  // Yahoo Finance symbol (e.g., NHY.OL)
  
  // Basic info
  longName    String?
  shortName   String?
  currency    String?
  
  // Current market data
  currentPrice Float?
  regularMarketChange Float?
  regularMarketChangePercent Float?
  regularMarketPreviousClose Float?
  regularMarketDayHigh Float?
  regularMarketDayLow Float?
  regularMarketDayRange String?
  regularMarketVolume Float?
  regularMarketTime DateTime?
  
  // 52-week data
  fiftyTwoWeekLow Float?
  fiftyTwoWeekHigh Float?
  fiftyTwoWeekLowChange Float?
  fiftyTwoWeekHighChange Float?
  fiftyTwoWeekLowChangePercent Float?
  fiftyTwoWeekHighChangePercent Float?
  fiftyTwoWeekRange String?
  
  // Exchange info
  exchange String?
  exchangeTimezoneName String?
  exchangeTimezoneShortName String?
  fullExchangeName String?
  marketState String?
  
  // Company info
  quoteType String?
  typeDisp String?
  firstTradeDateMilliseconds Float?
  
  // Metadata
  lastUpdated DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  holdings    Holding[]
  transactions Transaction[]
  
  @@map("market_data")
}

model Holding {
  id          String   @id @default(cuid())
  portfolioId String
  symbol      String
  isin        String?  // International Securities Identification Number
  quantity    Float
  avgPrice    Float
  currency    String   @default("NOK") // Currency for this holding
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  marketData  MarketData? @relation(fields: [isin], references: [isin], onDelete: SetNull)
  
  @@unique([portfolioId, symbol])
  @@map("holdings")
}

enum TransactionType {
  BUY
  SELL
  DIVIDEND
  SPLIT
  MERGER
  DEPOSIT
  WITHDRAWAL
  REFUND
  LIQUIDATION
  REDEMPTION
  EXCHANGE_IN
  EXCHANGE_OUT
  SPIN_OFF_IN
  DECIMAL_LIQUIDATION
  DECIMAL_WITHDRAWAL
  RIGHTS_ALLOCATION
  TRANSFER_IN
  DIVIDEND_REINVEST
  INTEREST_CHARGE
  RIGHTS_ISSUE
  SALDO_ADJUSTMENT
}
